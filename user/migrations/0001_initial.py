# Generated by Django 4.1.5 on 2023-03-01 09:36

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, null=True, unique=True, verbose_name='邮件')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars', verbose_name='头像')),
                ('role', models.CharField(choices=[('0', '学生'), ('1', '教师'), ('2', '其他工作人员'), ('3', '社会人士')], max_length=20, null=True, verbose_name='人群')),
                ('mobile', models.CharField(blank=True, max_length=11, null=True, verbose_name='手机号码')),
                ('address', models.CharField(blank=True, max_length=100, null=True, verbose_name='地址')),
                ('weChat', models.CharField(blank=True, max_length=100, null=True, verbose_name='微信账号')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='公告标题')),
                ('content', models.TextField(verbose_name='公告内容')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '公告',
                'verbose_name_plural': '公告',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
            ],
            options={
                'verbose_name': '目录',
                'verbose_name_plural': '目录',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DonationProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=100, verbose_name='捐赠项目')),
                ('project_desc', models.CharField(max_length=200, verbose_name='项目介绍')),
                ('start_time', models.DateTimeField(auto_now_add=True, verbose_name='发起时间')),
                ('deadline', models.DateTimeField(verbose_name='截止时间')),
                ('want_item', models.CharField(max_length=100, verbose_name='需求物品')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='物品单价')),
                ('item_quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1, message='数量必须大于1')])),
                ('get_donation_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='当前筹集金额')),
                ('donation_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='目的捐赠金额')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.category', verbose_name='物品类别')),
            ],
            options={
                'verbose_name': '捐赠项目',
                'verbose_name_plural': '捐赠项目',
            },
        ),
        migrations.CreateModel(
            name='DonationRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('donation_time', models.DateTimeField(auto_now_add=True, verbose_name='捐赠时间')),
                ('donation_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='捐赠价值')),
                ('status', models.CharField(choices=[(0, '审核'), (1, '暂存'), (2, '完成')], max_length=10, verbose_name='捐赠状态')),
                ('donation_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='donation_records', to='user.donationproject', verbose_name='所属捐赠项目')),
                ('donation_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='donation_records', to=settings.AUTH_USER_MODEL, verbose_name='捐赠记录')),
            ],
            options={
                'verbose_name': '捐赠物资',
                'verbose_name_plural': '捐赠物资',
            },
        ),
        migrations.CreateModel(
            name='DonationItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('detail', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('item_iamge', models.ImageField(blank=True, null=True, upload_to='item_iamge')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='donation_items', to='user.category', verbose_name='物品类别')),
                ('donation_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='donation_items', to='user.donationproject', verbose_name='所属捐赠项目')),
                ('donation_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.donationrecord', verbose_name='所属捐赠记录')),
            ],
            options={
                'verbose_name': '捐赠物资',
                'verbose_name_plural': '捐赠物资',
            },
        ),
    ]
